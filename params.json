{"name":"Gw2-js-api-wrapper","tagline":"","body":"What is this?\r\n------------------\r\n\r\nThis library of functions is a JS wrapper for the Guild Wars 2 public API. It wraps the current APIs available with functions and provides some utility functions.\r\n\r\nRequirements\r\n------------------\r\n* **jQuery 1.8.0+** (Example using jQuery 2.0.2 hosted on Google's servers)\r\n* **sylvester.js** Used for *getColorOnMaterial()*\r\n\r\nInstallation\r\n------------------\r\nInclude the following wherever you are loading your libraries, make sure it is loaded after the required libraries\r\n`<script src=\"gw2-api-wrapper.js\"></script>`\r\n\r\nFunction Reference\r\n------------------\r\n\r\n###General\r\n**checkValidLanguages(language)** - Checks if the given language is available with the API\r\n\r\n###Dynamic Event API\r\n**getEvents(worldID, mapID, eventID)** - Gets all events, filtered by the given arguments  \r\n**getWorldNames([language])** - Gets all world names and caches them  \r\n**getWorldName(worldID [,language])** - Gets a single world's name  \r\n**getMapNames([language])** - Gets all map names and caches them  \r\n**getMapName(mapID [,language])** - Gets a single map's name  \r\n**getEvents([language])** - Gets all event names and caches them  \r\n**getEvent(eventID [,language])** - Gets a single event's name  \r\n\r\n###WvW API\r\n**getWvwMatches()** - Gets all currently running WvW matches  \r\n**getObjectiveNames([language])** - Gets all WvW objectives and caches them  \r\n**getObjectiveName(objectiveID [,language])** - Gets a single objective's name  \r\n**getMatchDetails(matchID)** - Get the details of a single match  \r\n\r\n###Item and Recipe API\r\n**getItems()** - Gets a list of all item IDs  \r\n**getItemDetails(itemID [,language])** - Gets a single item's details  \r\n**getRecipes()** - Gets a list of all recipe IDs  \r\n**getRecipeDetails(recipeID)** - Gets a single recipe's details\r\n\r\n###Miscellaneous APIs\r\n**getBuildID()** - Gets the current build ID  \r\n**getColors([language])** - Gets all currently available dye colors  \r\n**getColorOnMaterial(colorID, material [,language])** - Gets a dye color as if it were on a certain material. Materials can be \"cloth\", \"leather\", or \"metal\"\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}