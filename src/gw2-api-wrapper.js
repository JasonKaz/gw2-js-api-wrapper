// Generated by CoffeeScript 1.6.3
(function() {
  window.GW2API = (function() {
    function GW2API() {
      this.worldNames = this.mapNames = this.eventNames = this.objectiveNames = this.items = this.recipes = this.colors = this.wvwMatches = this.gameBuild = this.continents = this.maps = this.assets = null;
      this.mapFloors = this.mapDetails = {};
    }

    GW2API.prototype.getEvents = function(worldID, mapID, eventID) {
      var data;
      if (worldID == null) {
        worldID = 1001;
      }
      if (mapID == null) {
        mapID = 0;
      }
      if (eventID == null) {
        eventID = 0;
      }
      data = null;
      $.ajax({
        url: "https://api.guildwars2.com/v1/events.json",
        type: "get",
        dataType: "json",
        async: false,
        data: {
          world_id: worldID,
          map_id: mapID,
          event_id: eventID
        }
      }).done(function(d) {
        return data = d.events;
      });
      return data;
    };

    GW2API.prototype.checkValidLanguage = function(language) {
      return this.getValidLanguages().indexOf(language) > -1;
    };

    GW2API.prototype.getValidLanguages = function() {
      return ["en", "fr", "de", "es"];
    };

    GW2API.prototype.getWorldNames = function(language) {
      var me;
      if (language == null) {
        language = "en";
      }
      if (this.checkValidLanguage(language)) {
        if (!this.worldNames) {
          me = this;
          $.ajax({
            url: "https://api.guildwars2.com/v1/world_names.json",
            type: "get",
            dataType: "json",
            async: false,
            data: {
              lang: language
            }
          }).done(function(d) {
            return me.worldNames = d;
          });
        }
        return this.worldNames;
      }
      return false;
    };

    GW2API.prototype.getWorldName = function(worldID, language) {
      var i, _i, _len, _ref;
      if (language == null) {
        language = "en";
      }
      if (this.checkValidLanguage(language)) {
        worldID = worldID.toString();
        _ref = this.getWorldNames(language);
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          i = _ref[_i];
          if (i.id === worldID) {
            return i.name;
          }
        }
      }
      return false;
    };

    GW2API.prototype.getMapNames = function(language) {
      var me;
      if (language == null) {
        language = "en";
      }
      if (this.checkValidLanguage(language)) {
        if (!this.mapNames) {
          me = this;
          $.ajax({
            url: "https://api.guildwars2.com/v1/map_names.json",
            type: "get",
            dataType: "json",
            async: false,
            data: {
              lang: language
            }
          }).done(function(d) {
            return me.mapNames = d;
          });
        }
        return this.mapNames;
      }
      return false;
    };

    GW2API.prototype.getMapName = function(mapID, language) {
      var i, _i, _len, _ref;
      if (language == null) {
        language = "en";
      }
      if (this.checkValidLanguage(language)) {
        mapID = mapID.toString();
        _ref = this.getMapNames(language);
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          i = _ref[_i];
          if (i.id === mapID) {
            return i.name;
          }
        }
      }
      return false;
    };

    GW2API.prototype.getEventNames = function(language) {
      var me;
      if (language == null) {
        language = "en";
      }
      if (this.checkValidLanguage(language)) {
        if (!this.eventNames) {
          me = this;
          $.ajax({
            url: "https://api.guildwars2.com/v1/event_names.json",
            type: "get",
            dataType: "json",
            async: false,
            data: {
              lang: language
            }
          }).done(function(d) {
            return me.eventNames = d;
          });
        }
        return this.eventNames;
      }
      return false;
    };

    GW2API.prototype.getEventName = function(eventID, language) {
      var i, _i, _len, _ref;
      if (language == null) {
        language = "en";
      }
      if (this.checkValidLanguage(language)) {
        _ref = this.getEventNames(language);
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          i = _ref[_i];
          if (i.id === eventID) {
            return i.name;
          }
        }
      }
      return false;
    };

    GW2API.prototype.getWvwMatches = function() {
      var me;
      if (!this.wvwMatches) {
        me = this;
        $.ajax({
          url: "https://api.guildwars2.com/v1/wvw/matches.json",
          type: "get",
          dataType: "json",
          async: false
        }).done(function(d) {
          console.log(d);
          return me.wvwMatches = d.wvw_matches;
        });
        return this.wvwMatches;
      }
    };

    GW2API.prototype.getObjectiveNames = function(language) {
      var me;
      if (language == null) {
        language = "en";
      }
      if (this.checkValidLanguage(language)) {
        if (!this.objectiveNames) {
          me = this;
          $.ajax({
            url: "https://api.guildwars2.com/v1/wvw/objective_names.json",
            type: "get",
            dataType: "json",
            async: false,
            data: {
              lang: language
            }
          }).done(function(d) {
            return me.objectiveNames = d;
          });
        }
        return this.objectiveNames;
      }
      return false;
    };

    GW2API.prototype.getObjectiveName = function(objectiveID, language) {
      var i, _i, _len, _ref;
      if (language == null) {
        language = "en";
      }
      if (this.checkValidLanguage(language)) {
        objectiveID = objectiveID.toString();
        _ref = this.getObjectiveNames(language);
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          i = _ref[_i];
          if (i.id === objectiveID) {
            return i.name;
          }
        }
      }
      return false;
    };

    GW2API.prototype.getMatchDetails = function(matchID) {
      var data;
      data = null;
      $.ajax({
        url: "https://api.guildwars2.com/v1/wvw/match_details.json",
        type: "get",
        dataType: "json",
        async: false,
        data: {
          match_id: matchID
        }
      }).done(function(d) {
        return data = d;
      });
      return data;
    };

    GW2API.prototype.getItems = function() {
      var me;
      if (!this.items) {
        me = this;
        $.ajax({
          url: "https://api.guildwars2.com/v1/items.json",
          type: "get",
          dataType: "json",
          async: false
        }).done(function(d) {
          return me.items = d.items;
        });
      }
      return this.items;
    };

    GW2API.prototype.getItemDetails = function(itemID, language) {
      var data;
      if (language == null) {
        language = "en";
      }
      if (this.checkValidLanguage(language)) {
        data = null;
        $.ajax({
          url: "https://api.guildwars2.com/v1/item_details.json",
          type: "get",
          dataType: "json",
          async: false,
          data: {
            item_id: itemID,
            lang: language
          }
        }).done(function(d) {
          return data = d;
        });
        return data;
      }
      return false;
    };

    GW2API.prototype.getRecipes = function() {
      var me;
      if (!this.recipes) {
        me = this;
        $.ajax({
          url: "https://api.guildwars2.com/v1/recipes.json",
          type: "get",
          dataType: "json",
          async: false
        }).done(function(d) {
          return me.recipes = d.recipes;
        });
      }
      return this.recipes;
    };

    GW2API.prototype.getRecipeDetails = function(recipeID, language) {
      var data;
      if (language == null) {
        language = "en";
      }
      if (this.checkValidLanguage(language)) {
        data = null;
        $.ajax({
          url: "https://api.guildwars2.com/v1/recipe_details.json",
          type: "get",
          dataType: "json",
          async: false,
          data: {
            recipe_id: recipeID,
            lang: language
          }
        }).done(function(d) {
          return data = d;
        });
        return data;
      }
      return false;
    };

    GW2API.prototype.getBuildID = function() {
      var me;
      if (!this.gameBuild) {
        me = this;
        $.ajax({
          url: "https://api.guildwars2.com/v1/build.json",
          type: "get",
          dataType: "json",
          async: false
        }).done(function(d) {
          return me.gameBuild = d.build_id;
        });
      }
      return this.gameBuild;
    };

    GW2API.prototype.getGuildDetails = function(name, ID) {
      var data, requestData;
      if (name == null) {
        name = null;
      }
      if (ID == null) {
        ID = null;
      }
      data = null;
      requestData = null;
      if (!name && ID) {
        requestData = {
          guild_id: ID
        };
      }
      if (!ID && name) {
        requestData = {
          guild_name: name
        };
      }
      if (!requestData) {
        return false;
      }
      $.ajax({
        url: "https://api.guildwars2.com/v1/guild_details.json",
        type: "get",
        dataType: "json",
        async: false,
        data: requestData
      }).done(function(d) {
        return data = d;
      });
      return data;
    };

    GW2API.prototype.getColors = function(language) {
      var me;
      if (language == null) {
        language = "en";
      }
      if (this.checkValidLanguage(language)) {
        if (!this.colors) {
          me = this;
          $.ajax({
            url: "https://api.guildwars2.com/v1/colors.json",
            type: "get",
            dataType: "json",
            async: false,
            data: {
              lang: language
            }
          }).done(function(d) {
            return me.colors = d.colors;
          });
        }
        return this.colors;
      }
      return false;
    };

    GW2API.prototype.getColorOnMaterial = function(colorID, material, language) {
      var bgrVector, brightness, color, contrast, cosHue, hue, lightness, matrix, mult, multHslToRgb, multRgbToHsl, resultRgb, saturation, sinHue, t;
      if (language == null) {
        language = "en";
      }
      if (["cloth", "leather", "metal"].indexOf(material) > -1) {
        if (this.checkValidLanguage(language)) {
          color = this.getColors(language)[colorID];
          brightness = color[material].brightness / 128;
          contrast = color[material].contrast;
          hue = (color[material].hue * 3.14159265358979323846) / 180;
          saturation = color[material].saturation;
          lightness = color[material].lightness;
          matrix = Matrix.I(4);
          if (brightness !== 0 || contrast !== 1) {
            t = 128 * (2 * brightness + 1 - contrast);
            mult = $M([[contrast, 0, 0, t], [0, contrast, 0, t], [0, 0, contrast, t], [0, 0, 0, 1]]);
            matrix = mult.x(matrix);
          }
          if (hue !== 0 || saturation !== 1 || lightness !== 1) {
            multRgbToHsl = $M([[0.707107, 0.0, -0.707107, 0], [-0.408248, 0.816497, -0.408248, 0], [0.577350, 0.577350, 0.577350, 0], [0, 0, 0, 1]]);
            matrix = multRgbToHsl.x(matrix);
            cosHue = Math.cos(hue);
            sinHue = Math.sin(hue);
            mult = $M([[cosHue * saturation, sinHue * saturation, 0, 0], [-sinHue * saturation, cosHue * saturation, 0, 0], [0, 0, lightness, 0], [0, 0, 0, 1]]);
            matrix = mult.x(matrix);
            multHslToRgb = $M([[0.707107, -0.408248, 0.577350, 0], [0, 0.816497, 0.577350, 0], [-0.707107, -0.408248, 0.577350, 0], [0, 0, 0, 1]]);
            matrix = multHslToRgb.x(matrix);
          }
          bgrVector = $V([color.base_rgb[2], color.base_rgb[1], color.base_rgb[0], 1]);
          bgrVector = matrix.x(bgrVector);
          resultRgb = [bgrVector.elements[2], bgrVector.elements[1], bgrVector.elements[0]];
          resultRgb[0] = Math.floor(Math.max(0, Math.min(255, resultRgb[0])));
          resultRgb[1] = Math.floor(Math.max(0, Math.min(255, resultRgb[1])));
          resultRgb[2] = Math.floor(Math.max(0, Math.min(255, resultRgb[2])));
          return resultRgb;
        }
      }
      return false;
    };

    GW2API.prototype.getAssetURL = function(signature, id, format) {
      if (format == null) {
        format = "png";
      }
      if (["png", "jpg"].indexOf(format) > -1) {
        return "https://render.guildwars2.com/file/" + signature + "/" + id + "." + format;
      }
      return false;
    };

    GW2API.prototype.getAssets = function() {
      var me;
      if (!this.assets) {
        me = this;
        $.ajax({
          url: "https://api.guildwars2.com/v1/files.json",
          type: "get",
          dataType: "json",
          async: false
        }).done(function(d) {
          return me.assets = d;
        });
      }
      return this.assets;
    };

    GW2API.prototype.getAsset = function(assetName) {
      return this.getAssets()[assetName];
    };

    GW2API.prototype.getContinents = function() {
      var me;
      if (!this.continents) {
        me = this;
        $.ajax({
          url: "https://api.guildwars2.com/v1/continents.json",
          type: "get",
          dataType: "json",
          async: false
        }).done(function(d) {
          return me.continents = d.continents;
        });
      }
      return this.continents;
    };

    GW2API.prototype.getContinent = function(continentID) {
      if (continentID) {
        return this.getContinents()[continentID];
      }
      return false;
    };

    GW2API.prototype.getMaps = function(language) {
      var me;
      if (language == null) {
        language = "en";
      }
      if (this.checkValidLanguage(language)) {
        if (!this.maps) {
          me = this;
          $.ajax({
            url: "https://api.guildwars2.com/v1/maps.json",
            type: "get",
            dataType: "json",
            async: false,
            data: {
              lang: language
            }
          }).done(function(d) {
            return me.maps = d.maps;
          });
        }
        return this.maps;
      }
      return false;
    };

    GW2API.prototype.getMap = function(mapID, language) {
      if (language == null) {
        language = "en";
      }
      if (this.checkValidLanguage(language)) {
        if (mapID) {
          return this.getMaps(language)[mapID];
        }
      }
      return false;
    };

    GW2API.prototype.getMapFloor = function(continentID, floorID, language) {
      var id, me;
      if (language == null) {
        language = "en";
      }
      if (this.checkValidLanguage(language)) {
        if (continentID && floorID) {
          id = continentID + "," + floorID;
          if (!this.mapFloors || !this.mapFloors[id]) {
            me = this;
            $.ajax({
              url: "https://api.guildwars2.com/v1/map_floor.json",
              type: "get",
              dataType: "json",
              async: false,
              data: {
                continent_id: continentID,
                floor: floorID,
                lang: language
              }
            }).done(function(d) {
              return me.mapFloors[id] = d;
            });
          }
          return this.mapFloors[id];
        }
      }
      return false;
    };

    GW2API.prototype.getTileURL = function(continentID, floorID, z, x, y) {
      return "https://tiles.guildwars2.com/" + continentID + "/" + floorID + "/" + z + "/" + x + "/" + y + ".jpg";
    };

    GW2API.prototype.getAllEventDetails = function(language) {
      var me;
      if (language == null) {
        language = "en";
      }
      if (this.checkValidLanguage(language)) {
        if (!this.eventDetails) {
          me = this;
          $.ajax({
            url: "https://api.guildwars2.com/v1/event_details.json",
            type: "get",
            dataType: "json",
            async: false,
            data: {
              lang: language
            }
          }).done(function(d) {
            return me.eventDetails = d.events;
          });
        }
        return this.eventDetails;
      }
      return false;
    };

    GW2API.prototype.getEventDetails = function(eventID, language) {
      if (language == null) {
        language = "en";
      }
      if (this.checkValidLanguage(language)) {
        return this.getAllEventDetails(language)[eventID];
      }
      return false;
    };

    return GW2API;

  })();

}).call(this);
